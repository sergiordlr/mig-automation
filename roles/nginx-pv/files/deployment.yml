apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: nginx
      template: mysql-persistent-template
    name: nginx-logs
    namespace: nginx-example
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 50Mi
    storageClassName: glusterfs-storage
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: nginx
      template: mysql-persistent-template
    name: nginx-html
    namespace: nginx-example
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 50Mi
    storageClassName: glusterfs-storage
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    labels:
      template: mysql-persistent-template
    name: nginx-deployment
    namespace: nginx-example
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: nginx
      spec:
        containers:
        - image: docker.io/twalter/openshift-nginx
          name: nginx
          ports:
          - containerPort: 8081
          volumeMounts:
          - mountPath: /var/log/nginx
            name: nginx-logs
            readOnly: false
          - mountPath: /usr/share/nginx/html
            name: nginx-html
            readOnly: false
        volumes:
        - name: nginx-logs
          persistentVolumeClaim:
            claimName: nginx-logs
        - name: nginx-html
          persistentVolumeClaim:
            claimName: nginx-html
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nginx
      template: mysql-persistent-template
    name: my-nginx
    namespace: nginx-example
  spec:
    ports:
    - port: 8081
      targetPort: 8081
    selector:
      app: nginx
    type: LoadBalancer
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: nginx
      service: my-nginx
      template: mysql-persistent-template
    name: my-nginx
    namespace: nginx-example
  spec:
    port:
      targetPort: 8081
    to:
      kind: Service
      name: my-nginx
kind: List
metadata: {}
